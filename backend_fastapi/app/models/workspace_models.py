from pydantic import BaseModel, Field
from typing import Optional
from datetime import datetime
import uuid

class WorkspaceBase(BaseModel):
    name: str
    description: Optional[str] = None

class WorkspaceCreate(WorkspaceBase):
    # owner_id will be set from the authenticated user
    # invite_code will be generated by the server
    pass

class WorkspaceUpdate(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None

class WorkspaceInDBBase(WorkspaceBase):
    id: uuid.UUID = Field(default_factory=uuid.uuid4)
    owner_id: uuid.UUID # Reference to User ID
    invite_code: str = Field(default_factory=lambda: str(uuid.uuid4())[:8]) # Example invite code generation
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)

    class Config:
        orm_mode = True # For Pydantic v1
        # from_attributes = True # For Pydantic v2

class WorkspacePublic(WorkspaceInDBBase):
    pass
